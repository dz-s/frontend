{"version":3,"sources":["App.styled.ts","Player.styled.ts","Player.tsx","Controls.styled.ts","Controls.tsx","App.tsx","index.tsx"],"names":["AppStyle","styled","div","PlayerStyle","PlayerMetaStyle","Player","props","ref","React","createRef","state","autoplay","document","addEventListener","handleKeyDown","bind","e","code","this","moveCursor","playing","onPause","onPlay","node","current","play","pause","setState","playsInline","key","source","controls","autoPlay","loop","looping","muted","preload","onEnded","onError","poster","style","maxHeight","minHeight","maxWidth","userSelect","borderRadius","src","name","Component","ControlsStyle","ControlsTextStyle","Controls","onClick","toggleLoop","href","download","target","color","textDecoration","App","playlist","cursor","delta","length","arr","i","j","Math","floor","random","BASE","axios","get","threads","data","promisedPosts","map","x","id","then","v","value","status","Promise","all","posts","content","includes","files","filter","flatMap","kind","full","thumbnail","shuffle","video","ReactDOM","render","getElementById"],"mappings":"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","file":"static/js/main.05060688.chunk.js","sourcesContent":["import styled from \"styled-components\";\n\nconst AppStyle = styled.div`\n  height: 100%;\n  width: 100%;\n  display: block;\n  margin: 0 auto;\n  text-align: center;\n  overflow: hidden;\n`;\n\nexport {AppStyle};","import styled from \"styled-components\";\n\nconst PlayerStyle = styled.div`\n  position: relative;\n  margin-left: auto;\n  margin-right: auto;\n  margin-top: 5vh;\n`;\n\nconst PlayerMetaStyle = styled.div`\n  font-family: \"Roboto\", sans-serif;\n`;\n\nexport {PlayerStyle, PlayerMetaStyle};","import React from \"react\";\nimport * as S from \"./Player.styled\";\n\ninterface Props {\n  source: string;\n  name: string;\n  poster: string;\n\n  playing: boolean;\n  looping: boolean;\n\n  onPlay: Function;\n  onPause: Function;\n  moveCursor: Function;\n}\n\ninterface State {\n  autoplay: boolean;\n}\n\nclass Player extends React.Component<Props, State> {\n  ref: React.RefObject<HTMLVideoElement>;\n\n  constructor(props: Props) {\n    super(props);\n\n    this.ref = React.createRef<HTMLVideoElement>();\n\n    this.state = {\n      autoplay: false\n    };\n\n    document.addEventListener(\"keydown\", this.handleKeyDown.bind(this));\n  }\n\n  handleKeyDown(e: KeyboardEvent) {\n    switch (e.code) {\n      case \"ArrowLeft\":\n        this.props.moveCursor(-1);\n        break;\n      case \"ArrowRight\":\n        this.props.moveCursor(1);\n        break;\n      case \"Space\":\n        this.props.playing ? this.props.onPause() : this.props.onPlay();\n        break;\n    }\n  }\n\n  componentDidMount() {\n  }\n\n  componentDidUpdate() {\n    const node = this.ref.current;\n    if (node)\n      this.props.playing ? node.play() : node.pause();\n\n    if (this.props.playing && !this.state.autoplay)\n      this.setState({autoplay: true});\n  }\n\n  render() {\n    return (\n      <S.PlayerStyle>\n        <video\n          playsInline={true}\n          ref={this.ref}\n          key={this.props.source}\n          controls={true}\n          autoPlay={this.state.autoplay}\n          loop={this.props.looping}\n          muted={false}\n          preload={\"auto\"}\n          onPlay={() => this.props.onPlay()}\n          onPause={() => this.props.onPause()}\n          onEnded={() => this.props.moveCursor(1)}\n          onError={() => this.props.moveCursor(1)}\n          poster={this.props.poster}\n          style={\n            {\n              maxHeight: \"70vh\",\n              minHeight: \"40vh\",\n              maxWidth: \"90vw\",\n              userSelect: \"none\",\n              borderRadius: \"5px\"\n            }\n          }\n        >\n          <source src={this.props.source}/>\n        </video>\n        <S.PlayerMetaStyle>\n          {this.props.name}\n        </S.PlayerMetaStyle>\n      </S.PlayerStyle>\n    )\n  }\n}\n\n\nexport default Player;\n","import styled from \"styled-components\";\n\nconst ControlsStyle = styled.div`\n  text-align: center;\n  position: fixed;\n  bottom: 5vh;\n  left: 50%;\n  transform: translateX(-50%);\n`;\n\nconst ControlsTextStyle = styled.div`\n  color: hotpink;\n  letter-spacing: 1px;\n  margin-right: 1rem;\n  display: inline-block;\n\n  &:hover {\n    color: orange;\n  }\n  &:link {\n    color: hotpink;\n  }\n  &:visited {\n    color: red;\n  }\n`;\n\nexport {ControlsStyle, ControlsTextStyle};","import React from \"react\";\nimport * as S from \"./Controls.styled\";\n\n\ninterface Props {\n  source: string;\n  playing: boolean;\n  looping: boolean\n\n  moveCursor: Function;\n  toggleLoop: Function;\n}\n\ninterface State {\n}\n\nclass Controls extends React.Component<Props, State> {\n  constructor(props: Props) {\n    super(props);\n\n    this.state = {}\n  }\n\n  render() {\n    return (\n      <S.ControlsStyle>\n        <S.ControlsTextStyle>\n                    <span onClick={() => this.props.moveCursor(-1)}>\n                    {\"◀\"}\n                    </span>\n        </S.ControlsTextStyle>\n\n        <S.ControlsTextStyle>\n          |\n        </S.ControlsTextStyle>\n\n        <S.ControlsTextStyle>\n                    <span onClick={() => this.props.moveCursor(1)}>\n                    {\"▶\"}\n                    </span>\n        </S.ControlsTextStyle>\n\n        <br/>\n        <br/>\n\n        <S.ControlsTextStyle>\n          <span onClick={() => this.props.toggleLoop()}>\n            {this.props.looping ? \"LOOPING\" : \"LOOP\"}\n          </span>\n        </S.ControlsTextStyle>\n\n        <S.ControlsTextStyle>\n          <a href={this.props.source} download target={\"_blank\"}\n             style={\n               {\n                 color: \"hotpink\",\n                 textDecoration: \"none\"\n               }\n             }>\n            DOWNLOAD\n          </a>\n        </S.ControlsTextStyle>\n      </S.ControlsStyle>\n    )\n  }\n}\n\nexport default Controls;","import React from \"react\";\nimport * as S from \"./App.styled\";\nimport Player from \"./Player\";\nimport Controls from \"./Controls\";\nimport axios from \"axios\";\n\ninterface Props {\n}\n\ninterface State {\n  playing: boolean;\n  looping: boolean;\n\n  playlist: Array<{ source: string; name: string; poster: string }>;\n  cursor: number;\n}\n\nclass App extends React.Component<Props, State> {\n  constructor(props: Props) {\n    super(props);\n\n    this.state = {\n      playing: false,\n      looping: true,\n      playlist: [],\n      cursor: 0\n    }\n  }\n\n  onPlay() {\n    this.setState({playing: true});\n  }\n\n  onPause() {\n    this.setState({playing: false});\n  }\n\n  moveCursor(delta: number) {\n    const cursor = this.state.cursor + delta;\n\n    if (cursor < 0 || cursor >= this.state.playlist.length)\n      return;\n\n    this.setState({cursor: cursor});\n  }\n\n  toggleLoop() {\n    this.setState({looping: !this.state.looping})\n  }\n\n  shuffle<T>(arr: Array<T>): Array<T> {\n    for (let i = arr.length - 1; i > 0; i--) {\n      const j = Math.floor(Math.random() * (i + 1));\n      [arr[i], arr[j]] = [arr[j], arr[i]];\n    }\n    return arr;\n  }\n\n  async componentDidMount() {\n    const BASE = `https://one.karasique.io/0/b`;\n\n    const threads = (await axios.get(BASE)).data;\n\n    const promisedPosts = threads\n      .map((x: { id: string; }) =>\n        axios\n          .get(`${BASE}/${x.id}`)\n          .then(\n            (v) => {\n              return {value: v.data, status: 1}\n            },\n            (e) => {\n              return {e: e, status: 0}\n            }\n          )\n      );\n\n    const files = (await Promise.all(promisedPosts))\n      .filter((x: any) => x.status === 1 && x.value.posts.length > 0)\n      .flatMap((x: any) => x.value.posts)\n      .filter(x =>\n        !x.content.includes(\"FAP\") &&\n        !x.content.includes(\"ФАП\") &&\n        !x.content.includes(\"ТРАП\")\n      )\n      .flatMap((x: any) => x.files);\n\n    const playlist = files\n      .filter((x: any) => x.kind === \"video\")\n      .map((x: any) => {\n          return {\n            source: x.full,\n            name: x.name,\n            poster: x.thumbnail\n          }\n        }\n      );\n\n    this.setState({\n      playlist: this.shuffle(playlist)\n    })\n  }\n\n\n  render() {\n    const {playlist, cursor} = this.state;\n    const video = playlist[cursor];\n    if (!video)\n      return (\n        \"Loading...\"\n      );\n\n    return (\n      <S.AppStyle>\n        <Player\n          source={video.source}\n          name={video.name}\n          poster={video.poster}\n          playing={this.state.playing}\n          looping={this.state.looping}\n          onPlay={this.onPlay.bind(this)}\n          onPause={this.onPause.bind(this)}\n          moveCursor={this.moveCursor.bind(this)}\n        />\n        <Controls\n          source={video.source}\n          playing={this.state.playing}\n          looping={this.state.looping}\n          moveCursor={this.moveCursor.bind(this)}\n          toggleLoop={this.toggleLoop.bind(this)}\n        />\n      </S.AppStyle>\n    );\n  }\n}\n\n\nexport default App;\n","import React from \"react\";\nimport ReactDOM from \"react-dom\";\nimport \"./index.css\";\nimport App from \"./App\";\n\nReactDOM.render(<App/>, document.getElementById(\"root\"));"],"sourceRoot":""}